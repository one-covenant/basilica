version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: basilica-billing-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: billing
      POSTGRES_PASSWORD: billing_dev_password
      POSTGRES_DB: basilica_billing
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - billing_postgres_data:/var/lib/postgresql/data
      # Migrations are handled by sqlx in the application, not by Docker
    ports:
      - "5432:5432"
    networks:
      - basilica_billing_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U billing -d basilica_billing"]
      interval: 10s
      timeout: 5s
      retries: 5

  billing:
    build:
      context: ../..
      dockerfile: scripts/billing/Dockerfile
    container_name: basilica-billing-dev
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - RUST_LOG=debug
      - RUST_BACKTRACE=1
      - DATABASE_URL=postgres://billing:billing_dev_password@postgres:5432/basilica_billing
      - BILLING_DATABASE__URL=postgres://billing:billing_dev_password@postgres:5432/basilica_billing
      - BILLING_SERVICE__ENVIRONMENT=development
      - BILLING_AWS__REGION=us-east-1
      - BILLING_AWS__USE_IAM_AUTH=false
    volumes:
      - ../../config/billing.dev.toml:/app/billing.toml:ro
      - ../../crates:/app/crates:ro
      - ../../Cargo.toml:/app/Cargo.toml:ro
      - ../../Cargo.lock:/app/Cargo.lock:ro
    ports:
      - "50051:50051"  # gRPC port
      - "8081:8080"     # HTTP port (8081 to avoid conflict with validator)
      - "9091:9090"     # Metrics port
    networks:
      - basilica_billing_network
    command: ["--config", "/app/billing.toml"]

volumes:
  billing_postgres_data:
    driver: local

networks:
  basilica_billing_network:
    driver: bridge
