# Basilica Billing Service Configuration Example
# Copy this file to billing.toml and customize for your deployment

[service]
name = "basilica-billing"
environment = "production"  # Options: "development", "staging", "production"
log_level = "info"          # Options: "debug", "info", "warn", "error"
metrics_enabled = true
service_id = "billing-001"  # Unique identifier for this billing service instance

[database]
# PostgreSQL connection string
url = "postgres://billing:YOUR_PASSWORD@localhost:5432/basilica_billing"
max_connections = 25
min_connections = 5
connect_timeout_seconds = 30
acquire_timeout_seconds = 30
idle_timeout_seconds = 600
max_lifetime_seconds = 1800
enable_ssl = true  # Enable SSL for production deployments

[grpc]
listen_address = "0.0.0.0"
port = 50051
max_message_size = 4194304  # 4MB
keepalive_interval_seconds = 300
keepalive_timeout_seconds = 20
tls_enabled = false  # Billing service uses standard HTTPS, not mTLS
max_concurrent_requests = 1000
max_concurrent_streams = 100
request_timeout_seconds = 60

[http]
listen_address = "0.0.0.0"
port = 8080
cors_enabled = true
cors_allowed_origins = ["*"]  # Restrict in production

[aggregator]
batch_size = 1000
batch_timeout_seconds = 60
processing_interval_seconds = 30
retention_days = 90
max_events_per_second = 10000

[telemetry]
# Configuration for receiving telemetry from executors
ingest_buffer_size = 10000    # Size of telemetry ingestion buffer
flush_interval_seconds = 10    # How often to flush telemetry to database
max_batch_size = 500           # Maximum batch size for database writes
compression_enabled = true     # Enable compression for telemetry data

[rules_engine]
evaluation_interval_seconds = 60
cache_ttl_seconds = 300
max_rules_per_package = 100
default_package_id = "h100"    # Default billing package

[aws]
# AWS configuration for secrets management (optional)
region = "us-east-1"
use_iam_auth = false
secrets_manager_enabled = false  # Set to true to use AWS Secrets Manager
# secret_name = "basilica/billing/database"  # Uncomment if using Secrets Manager

# Note: The billing service does not currently implement authentication for incoming
# telemetry streams. API key validation may be added in a future version.