name: Adhoc Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker tag to use (e.g., v1.0.0, latest, dev)'
        required: true
        default: 'latest'
      services:
        description: 'Comma-separated list of services to build (executor,miner,validator,public-api) or "all"'
        required: true
        default: 'all'

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.parse.outputs.services }}
    steps:
      - name: Parse services input
        id: parse
        run: |
          if [ "${{ github.event.inputs.services }}" = "all" ]; then
            echo 'services=["executor", "miner", "validator", "public-api"]' >> $GITHUB_OUTPUT
          else
            # Convert comma-separated to JSON array
            services=$(echo "${{ github.event.inputs.services }}" | sed 's/,/", "/g' | sed 's/^/["/' | sed 's/$/"]/')
            echo "services=$services" >> $GITHUB_OUTPUT
          fi

  build-docker-images:
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        service: ${{ fromJson(needs.prepare.outputs.services) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
          tags: |
            type=raw,value=${{ github.event.inputs.tag }}
            type=sha,prefix={{branch}}-

      # Copy veritas binaries for validator
      - name: Copy veritas binaries
        if: matrix.service == 'validator'
        run: |
          cp bin/executor-binary/executor-binary ./executor-binary
          cp bin/validator-binary/validator-binary ./validator-binary

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./scripts/${{ matrix.service }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_MODE=release
            VERSION=${{ github.event.inputs.tag }}
            BITTENSOR_NETWORK=finney